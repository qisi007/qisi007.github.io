import{_ as o,c as i,o as t,ao as a}from"./chunks/framework.B_KIjQED.js";const m=JSON.parse('{"title":"springBoot简介","description":"","frontmatter":{"title":"springBoot简介"},"headers":[],"relativePath":"entry/server/s1.md","filePath":"entry/server/s1.md","lastUpdated":1693989932000}'),r={name:"entry/server/s1.md"};function p(l,e,n,c,s,g){return t(),i("div",null,e[0]||(e[0]=[a('<h2 id="spring-boot是什么" tabindex="-1">Spring Boot是什么？ <a class="header-anchor" href="#spring-boot是什么" aria-label="Permalink to &quot;Spring Boot是什么？&quot;">​</a></h2><ol><li><p>SpringBoot是一个框架，一种全新的编程规范，他的产生简化了框架的使用，所谓简化是指简化了Spring众多框架中所需的大量且繁琐的配置文件，所以 SpringBoot是一个服务于框架的框架，服务范围是简化配置文件。</p></li><li><p>它使用“习惯优于配置”（项目中存在大量的配置，此外还内置了一个习惯性的配置，让你无需手动进行配置）的理念让你的项目快速运行起来。使用Spring Boot很容易创建一个独立运行（运行jar,内嵌Servlet容器）、准生产级别的基于Spring框架的项目，使用Spring Boot你可以不用或者只需要很少的Spring配置。</p></li><li><p>因为我之前是做前端的，我习惯和前端的基础栈去比较，我感觉springBoot更像是前端的脚手架vue-cli, springBoot有一个配置文件 <code>application.yaml</code> ，可以对项目全局配置，比如端口号，基础请求路径，运行环境,其他扩展等进行配置，vue-cli也有一个 <code>vue.config.js</code>，可以对项目进行配置，springBoot有一个文件 <code>pom.xml</code>可以对依赖以及依赖的版本号进行控制，vue-cli也有一个文件 <code>package.json</code>可以对项目的依赖进行控制，所以对于前端和后端的项目来说，二者有着类似的作用。</p></li></ol><h2 id="spring-boot的核心功能" tabindex="-1">Spring Boot的核心功能 <a class="header-anchor" href="#spring-boot的核心功能" aria-label="Permalink to &quot;Spring Boot的核心功能&quot;">​</a></h2><ol><li>独立运行的spring项目：可以以jar包的形式独立运行，通过Java -jar xx.jar来运行。</li><li>内嵌的servlet容器：可以选择内嵌的Tomcat、Jetty或者Undertow。</li><li>提供starter简化，maven配置:通过一系列的starter pom 来简化maven的依赖加载。</li><li>自动配置spring：spring boot 会根据在类路径中的jar包、类，为jar包里的类自动配置bean，这样会极大的减少我们要使用的配置。</li><li>准生产的应用监控：提供了基于http、ssh、telnet对运行的项目进行监控。</li><li>无代码生成的xml配置：通过条件注解来实现。</li></ol><h2 id="spring-boot的优点" tabindex="-1">Spring Boot的优点 <a class="header-anchor" href="#spring-boot的优点" aria-label="Permalink to &quot;Spring Boot的优点&quot;">​</a></h2><ol><li>快速构建项目</li><li>对主流的开发框架的无配置集成</li><li>项目可独立运行，无须外部用来servlet容器</li><li>提供运行时的应用监控</li><li>极大的提高了开发部署效率</li><li>与云计算天然集成</li></ol><h2 id="spring-boot快速搭建" tabindex="-1">Spring Boot快速搭建 <a class="header-anchor" href="#spring-boot快速搭建" aria-label="Permalink to &quot;Spring Boot快速搭建&quot;">​</a></h2><p>直接使用idea,点击右上角【file】--&gt;【new】--&gt;【project】， 选择左边【Spring Initializr】，填上关键信息后即可创建springBoot项目</p><blockquote><p>第一步：</p></blockquote><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/04ff598e87cf4b6d8c3d63839090f238~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><blockquote><p>第二步：选择【spring initialzr】, 填写项目基础信息，例如名称，地址，库，java版本等等</p></blockquote><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/30b5122c46f544fb92973d43dec16e48~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><blockquote><p>第三步：选择初始化需要下载的依赖</p></blockquote><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e57deda09854abe84e96f14ceeec830~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><blockquote><p>第四步： 选择【Finish】,就ok了</p></blockquote><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b409c135a9c498abb3f9fc954e3d75c~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="基础项目结构" tabindex="-1">基础项目结构 <a class="header-anchor" href="#基础项目结构" aria-label="Permalink to &quot;基础项目结构&quot;">​</a></h2><p>创建好项目后，可以看到有如下文件：</p><ol><li>src/main/java 程序开发以及主程序入口</li><li>src/main/resources 配置文件</li><li>src/test/java 测试程序</li><li>pom.xml springBoot配置文件</li></ol><h2 id="启动项目" tabindex="-1">启动项目 <a class="header-anchor" href="#启动项目" aria-label="Permalink to &quot;启动项目&quot;">​</a></h2><blockquote><ol><li>由于我选择的<code>Maven</code>,所以要从<code>Maven</code>仓库中现在一下依赖，点击<code>idea编辑器</code>右侧的【Maven】,选择刷新按钮，等待完成就行了</li></ol></blockquote><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51b8e4985f7246a7b5662fdb8984d438~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><blockquote><ol start="2"><li>然后我们选择入口函数，代码左边有个小三角，项目就启动了</li></ol></blockquote><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2c68f342f3d5417fbafd91c4c3762493~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p>',24)]))}const d=o(r,[["render",p]]);export{m as __pageData,d as default};

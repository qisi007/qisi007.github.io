import{_ as a,c as n,o as e,ao as p}from"./chunks/framework.B_KIjQED.js";const i="/assets/gitee01.TeZCA3t8.png",t="/assets/02.CONLdpga.png",l="/assets/03.DYvLjJvb.png",o="/assets/04.BQuZSw1p.png",m=JSON.parse('{"title":"凤凰城下的小码农","titleTemplate":"一个被敲代码耽误的大艺术家","description":"","frontmatter":{"title":"凤凰城下的小码农","titleTemplate":"一个被敲代码耽误的大艺术家"},"headers":[],"relativePath":"entry/front/gitee推送代码自动部署到静态资源服务器.md","filePath":"entry/front/gitee推送代码自动部署到静态资源服务器.md","lastUpdated":1754010097000}'),c={name:"entry/front/gitee推送代码自动部署到静态资源服务器.md"};function d(r,s,h,g,u,b){return e(),n("div",null,s[0]||(s[0]=[p('<h2 id="_1-配置gitee仓库" tabindex="-1">1.配置gitee仓库 <a class="header-anchor" href="#_1-配置gitee仓库" aria-label="Permalink to &quot;1.配置gitee仓库&quot;">​</a></h2><p>进入到gitee仓库中要部署的项目，点击管理，配置你服务器的地址, 并且设置一个webhook密码，也可以不设置密码， 但是为了安全起见，尽量设置一个，防止代码泄露的风险</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>url = ip + 端口号 + /webhook</span></span></code></pre></div><p><img src="'+i+`" alt="image"></p><p>选择事件Push， 勾选下边的激活，表示你每次推送代码到远程仓库都会触发这个请求，然后点击添加保存即可</p><h2 id="_2-服务器接收这个hook" tabindex="-1">2.服务器接收这个hook <a class="header-anchor" href="#_2-服务器接收这个hook" aria-label="Permalink to &quot;2.服务器接收这个hook&quot;">​</a></h2><p>现在你每次推送代码都会触发这个请求了，服务器得接收这个请求吧，这里需要写一个接收的方法</p><p>实现的思路是通过python接收这个请求，接收到之后触发一个脚本拉取仓库代码，并且复制到你的web服务器</p><p>在你的服务器用户下的文件夹新建一个<code>webhook_server.py</code>的文件，编写如下代码：</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>from flask import Flask, request, jsonify</span></span>
<span class="line"><span>import subprocess</span></span>
<span class="line"><span></span></span>
<span class="line"><span>app = Flask(__name__)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SECRET_TOKEN = &quot;***&quot;  # 对应 Gitee 设置的密码</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@app.route(&#39;/webhook&#39;, methods=[&#39;POST&#39;])</span></span>
<span class="line"><span>def webhook():</span></span>
<span class="line"><span>    # 可选：校验 token</span></span>
<span class="line"><span>    if request.headers.get(&#39;X-Gitee-Token&#39;) != SECRET_TOKEN:</span></span>
<span class="line"><span>        return jsonify({&quot;status&quot;: &quot;unauthorized&quot;}), 401</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    print(&quot;Received push event, pulling and deploying...&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # 执行部署脚本</span></span>
<span class="line"><span>    try:</span></span>
<span class="line"><span>        subprocess.run([&quot;./deploy.sh&quot;], check=True)</span></span>
<span class="line"><span>        return jsonify({&quot;status&quot;: &quot;success&quot;})</span></span>
<span class="line"><span>    except Exception as e:</span></span>
<span class="line"><span>        print(e)</span></span>
<span class="line"><span>        return jsonify({&quot;status&quot;: &quot;error&quot;, &quot;message&quot;: str(e)}), 500</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if __name__ == &#39;__main__&#39;:</span></span>
<span class="line"><span>    app.run(host=&#39;0.0.0.0&#39;, port=5000)</span></span></code></pre></div><p>记得修改代码中你在gitee中设置的密码 运行这段代码需要你在服务器中有python环境，没有的可以安装一下</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install python3</span></span></code></pre></div><p>安装成功后你的服务器就有python的包管理工具pip了，我们安装一下代码需要的依赖</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip install flask</span></span></code></pre></div><p>然后我们就可以结合<code>nohup</code>运行这个代码了</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nohup python3 webhook_server.py &gt; webhook.log 2&gt;&amp;1 &amp;</span></span></code></pre></div><p>其中：</p><ul><li><blockquote><p>webhook.log：输出日志到文件</p></blockquote></li><li>2&gt;&amp;1：错误也重定向到日志</li><li>&amp;：后台运行</li><li>nohup：关闭终端也不中断 查看一下是否运行成功</li></ul><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ps aux | grep webhook_server.py</span></span></code></pre></div><p>运行成功后终端会显示如下信息 <img src="`+t+`" alt="image"></p><h2 id="_3-编写脚本自动拉取代码" tabindex="-1">3. 编写脚本自动拉取代码 <a class="header-anchor" href="#_3-编写脚本自动拉取代码" aria-label="Permalink to &quot;3. 编写脚本自动拉取代码&quot;">​</a></h2><p>在上边<code>webhook_server.py</code>代码中，请求成功后执行了一个<code>deploy.sh</code>脚本,这个脚本的作用就是拉取你的gitee仓库的代码，并把代码复制 到你的web服务器 请确保你的服务器有git工具，并且添加了ssh并配置到你的gitee，如果没有安装git，可以执行下边这个命令</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install git</span></span></code></pre></div><p>然后新建一个文件夹<code>myProject</code>，并测试是否能够拉取成功</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone git@gitee.com:drnm/drnm_site.git</span></span></code></pre></div><p>如果你的是一个vue或者react项目，需要安装node环境</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install nodejs</span></span></code></pre></div><p>一切工作准备就绪，就可以新建deploy.sh了,里边写如下代码</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 进入项目目录</span></span>
<span class="line"><span>cd /home/lighthouse/myProject/drnm_site || exit</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 拉取最新代码</span></span>
<span class="line"><span>git reset --hard</span></span>
<span class="line"><span>git pull origin master</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 如果是vue等项目需要执行 npm i 和npm run build</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 复制构建后的文件到 Nginx 目录</span></span>
<span class="line"><span>cp -r ./* /var/www/html/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>echo &quot;Deployed successfully&quot;</span></span></code></pre></div><p>注意复制的路径要写对，如果你是vue项目可能是</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cp -r ./build/* /var/www/html/</span></span></code></pre></div><h2 id="_4-测试一下" tabindex="-1">4.测试一下 <a class="header-anchor" href="#_4-测试一下" aria-label="Permalink to &quot;4.测试一下&quot;">​</a></h2><p>我们借助curl请求一下webhook地址，并传入你设置的密码</p><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>curl -X POST webhook地址 -H &quot;X-Gitee-Token: 密码</span></span></code></pre></div><p>如果显示如下信息，证明你成功了 <img src="`+l+'" alt="image"></p><p>如果显示失败可能原因如下：</p><ul><li>你的服务器没有开通5000端口，去云服务器后台将这个端口添加到规则里，我的是腾讯云服务器，参考如下： <img src="'+o+'" alt="image"></li><li>deploy.sh没有权限，执行如下代码添加权限</li></ul><div class="language-aiignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">aiignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> chmod +x deploy.sh</span></span></code></pre></div><p>最后你就可以修改网站代码，推送，查看你修改的内容是否更新。</p>',39)]))}const _=a(c,[["render",d]]);export{m as __pageData,_ as default};
